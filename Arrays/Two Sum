// Brute 
for(int i=0;i<;i++){
  for(j=0;j<n;j++){
    if(i==j) continue;
    if(arr[i]+arr[j] == target){ 
      return "yes"
      cout<<i<<j<<endl;
    };
    else return "no "
  }
}

// Better 
map<int,int > mpp;
for(int i =0;i,n;i++){
  int a = book[i];
  int more = target-a;
  if(mpp.find(more)!=mpp.end()){
    return "yes"; // for Index return {mpp[more,i]}
  }
  mpp[a]= i;
  return "no";
}

// Optimal 
// Optimized
int left = 0; right = n-1;
sort(book.begin(),book.end());0
while(left<right){
  int sum = book[left]+book[right];
  if(sum==target){
    return "yes"
  }
  else if(sum<target) left++;
  right--;
}

return "no";
